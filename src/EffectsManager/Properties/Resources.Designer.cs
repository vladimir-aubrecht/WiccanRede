//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WiccanRede.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WiccanRede.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///
        ///	Zakladni shader, pres ktery je mozno vyrenderovat objekt s osvetlenim jednim smerovym svetlem
        ///	Shader se pouziva pro objekty, kterym nebyl prirazen zadny shader.
        ///
        ///*/
        ///
        ///shared float4x4 ViewProjection;
        ///shared float4x4 lightViewProjection;
        ///shared float4x4 Projection;
        ///shared float4x4 world[4];
        ///shared float4x4 worldIT[4];
        ///shared float4x4 View;
        ///shared float4 attributes;	//Time, Ambient Intenzite, Attuentation, 1
        ///shared float4 dirLight;
        ///shared texture color_texture0;
        ///
        ///
        ///sampler color_sampler = [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fxbase {
            get {
                return ResourceManager.GetString("fxbase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///
        ///	Shader vyrenderuje objekt na spravnou pozici a vyrenderovany objekt bude mint krome zeleneho kanalu vsechny vynulovane,
        ///	cerveny kanal bude obsahovat vysku ve World souradnicich (zakodovanou podle vztahu nize)
        ///	Je pouzit v pripade, ze je pouzit shader null
        ///
        ///*/
        ///
        ///shared float4x4 ViewProjection;
        ///shared float4x4 Projection;
        ///shared float4x4 lightViewProjection;
        ///shared float4x4 world[4];
        ///shared float4x4 worldIT[4];
        ///shared float4x4 View;
        ///shared float4x4 ViewI;
        ///shared float4 attributes;	//Time,  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sharedVariables {
            get {
                return ResourceManager.GetString("sharedVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to shared float4x4 ViewProjection;
        ///shared float4x4 Projection;
        ///shared float4x4 View;
        ///shared float4x4 ViewI;
        ///shared float4x4 world[4];
        ///shared texture color_texture0;
        ///
        ///sampler sTexPrev = sampler_state
        ///{
        ///	Texture = (color_texture0);
        ///	MINFILTER = Linear;
        ///	MAGFILTER = Linear;
        ///	MIPFILTER = Linear;
        ///	AddressU = clamp; 
        ///	AddressV = clamp;
        ///};
        ///
        ///
        ///struct VS_INPUT 
        ///{
        ///   float4 position : POSITION0;
        ///};
        ///
        ///
        ///struct VS_OUTPUT 
        ///{
        ///   float4 position : POSITION0;
        ///   float2 texCoord : TEXCOORD0; 
        ///};
        ///
        ///
        ///        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sprite {
            get {
                return ResourceManager.GetString("sprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to shared float4x4 ViewProjection;
        ///shared float4x4 lightViewProjection;
        ///shared float4x4 world[4];
        ///shared float4x4 worldIT[4];
        ///shared float4x4 View;
        ///shared float4 attributes;	//Time, Ambient Intenzite, Attuentation, 1
        ///shared texture color_texture0;
        ///shared texture color_texture1;
        ///shared texture color_texture2;
        ///shared texture normal_texture;
        ///shared texture shadow_texture;
        ///
        ///
        ///struct VS_INPUT 
        ///{
        ///   float4 position : POSITION0;
        ///   float3 normal : NORMAL;
        ///};
        ///
        ///struct VS_OUTPUT 
        ///{
        ///   float4 position [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string terrainCollission {
            get {
                return ResourceManager.GetString("terrainCollission", resourceCulture);
            }
        }
    }
}
